package keystrokesmod.module.impl.exploit;

import keystrokesmod.event.network.ReceivePacketEvent;
import keystrokesmod.event.network.SendPacketEvent;
import keystrokesmod.event.world.WorldChangeEvent;
import keystrokesmod.module.Module;
import keystrokesmod.module.impl.exploit.remoteshop.HypixelRemoteShop;
import keystrokesmod.module.impl.exploit.remoteshop.IRemoteShop;
import keystrokesmod.module.impl.exploit.remoteshop.NormalRemoteShop;
import keystrokesmod.module.setting.impl.ButtonSetting;
import keystrokesmod.module.setting.impl.DescriptionSetting;
import keystrokesmod.module.setting.impl.ModeValue;
import keystrokesmod.utility.Utils;
import net.minecraft.client.gui.inventory.GuiContainer;
import net.minecraft.client.gui.inventory.GuiInventory;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.server.S2EPacketCloseWindow;
import keystrokesmod.eventbus.annotations.EventListener;
import keystrokesmod.event.render.Render2DEvent;
import org.jetbrains.annotations.NotNull;
import org.lwjgl.input.Keyboard;

public class RemoteShop extends Module {
    public static final int KEYCODE = Keyboard.KEY_HOME;
    private final ModeValue mode;
    private final ButtonSetting cancelInventory;
    private boolean isToggled = false;

    public RemoteShop() {
        super("RemoteShop", category.exploit, "Allows you to use Aliexpress.");
        this.registerSetting(new DescriptionSetting("Press Home to shop."));
        this.registerSetting(mode = new ModeValue("Mode", this)
                .add(new NormalRemoteShop("Normal", this))
                .add(new HypixelRemoteShop("HypixelTest", this))
        );
        this.registerSetting(cancelInventory = new ButtonSetting("Cancel inventory", true));
    }

    @EventListener
    public void onRenderTick(@NotNull Render2DEvent event) {
        try {
            if (Utils.nullCheck()) {
                if (!this.isToggled && Keyboard.isKeyDown(KEYCODE)) {
                    ((IRemoteShop) mode.getSelected()).remoteShop();
                    this.isToggled = true;
                } else if (!Keyboard.isKeyDown(KEYCODE)) {
                    this.isToggled = false;
                }
            }
        } catch (Throwable ignored) {
        }
    }

    @Override
    public void onUpdate() throws Throwable {
        if (mc.currentScreen instanceof GuiContainer && !(mc.currentScreen instanceof GuiInventory && cancelInventory.isToggled())) {
            ((IRemoteShop) mode.getSelected()).openContainer();
        }
    }

    @EventListener
    public void onWorldChange(WorldChangeEvent event) {
        ((IRemoteShop) mode.getSelected()).forceClose();
    }

    @EventListener
    public void onReceivePacket(@NotNull ReceivePacketEvent event) {
        if (event.getPacket() instanceof S2EPacketCloseWindow) {
            ((IRemoteShop) mode.getSelected()).forceClose();
        }
    }

    @EventListener
    public void onSendPacket(@NotNull SendPacketEvent event) {
        if (event.getPacket() instanceof C0BPacketEntityAction && cancelInventory.isToggled()) {
            if (((C0BPacketEntityAction) event.getPacket()).getAction() == C0BPacketEntityAction.Action.OPEN_INVENTORY) {
                event.cancel();
            }
        }
    }

    @Override
    public void onEnable() throws Throwable {
        mode.enable();
    }

    @Override
    public void onDisable() throws Throwable {
        mode.disable();
        isToggled = false;
    }

    @Override
    public String getInfo() {
        return mode.getSelected().getPrettyName();
    }
}
