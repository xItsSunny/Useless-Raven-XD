package keystrokesmod.module.impl.exploit.disabler;

import keystrokesmod.event.network.SendPacketEvent;
import keystrokesmod.event.world.WorldChangeEvent;
import keystrokesmod.mixins.impl.network.C0FPacketConfirmTransactionAccessor;
import keystrokesmod.module.impl.exploit.Disabler;
import keystrokesmod.module.setting.impl.ButtonSetting;
import keystrokesmod.module.setting.impl.SubMode;
import keystrokesmod.utility.PacketUtils;
import keystrokesmod.utility.Utils;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import keystrokesmod.event.network.AttackEntityEvent;
import keystrokesmod.eventbus.annotations.EventListener;
import org.jetbrains.annotations.NotNull;

public class BlocksMCDisabler extends SubMode<Disabler> {
    private final ButtonSetting combat;
    private final ButtonSetting waitUntilCombat;
    private final ButtonSetting place;

    private boolean b = false;
    private boolean combatOccurred = false;

    public BlocksMCDisabler(String name, @NotNull Disabler parent) {
        super(name, parent);
        this.registerSetting(combat = new ButtonSetting("Combat", true));
        this.registerSetting(waitUntilCombat = new ButtonSetting("Wait until combat", true, combat::isToggled));
        this.registerSetting(place = new ButtonSetting("Place", false));
    }

    @Override
    public void onDisable() throws Throwable {
        b = false;
        combatOccurred = false;
    }

    @EventListener
    public void onAttack(AttackEntityEvent event) {
        combatOccurred = true;
    }

    @EventListener
    public void onWorldChange(WorldChangeEvent event) {
        combatOccurred = false;
    }

    @EventListener
    public void onSendPacket(@NotNull SendPacketEvent event) {
        if (event.getPacket() instanceof C08PacketPlayerBlockPlacement && place.isToggled()) {
            C08PacketPlayerBlockPlacement p = (C08PacketPlayerBlockPlacement) event.getPacket();
            PacketUtils.sendPacketNoEvent(new C08PacketPlayerBlockPlacement(p.getPosition(), p.getPlacedBlockDirection(), null, p.getPlacedBlockOffsetX(), p.getPlacedBlockOffsetY(), p.getPlacedBlockOffsetZ()));
            event.cancel();
        }

        if (event.getPacket() instanceof C0FPacketConfirmTransaction && combat.isToggled()) {
            if (!Utils.nullCheck() || mc.thePlayer.ticksExisted <= 20) {
                combatOccurred = false;
                return;
            }

            if (waitUntilCombat.isToggled() && !combatOccurred) {
                return;
            }

            ((C0FPacketConfirmTransactionAccessor) event.getPacket()).setUid((short) (b ? -1 : 1));
            b = !b;
        }
    }
}
